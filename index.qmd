
---
title: "Chem symbol test"
---

This is a simple chemical symbol test.  You'll be asked to enter chemical symbols for elements.

```{r}
#| include: false
library(shinylive)
```

```{shinylive-r}
#| standalone: true

chem <- data.frame(
  symbol = c("Al", "Sb", "Ar", "As", "Ba", "Be", "Bi", 
             "B", "Br", "Cd", "Ca", "C", "Cs", "Cl", "Cr",
             "Co", "Cu", "F", "Au", "He", "H", "I", "Fe",
             "Kr", "Pb", "Li", "Mg", "Mn", "Hg", "Ne", "Ni",
             "N", "O", "P", "Pt", "K", "Rn", "Se", "Si", "Ag",
             "Na", "Sr", "S", "Te", "Sn", "Ti", "W",
             "U", "V", "Xe", "Zn", "Zr"),
  name = c("aluminum", "antimony", "argon", "arsenic", "barium", "beryllium", "bismuth", 
           "boron", "bromine","cadmium", "calcium", "carbon", "cesium", "chlorine", "chromium",
           "cobalt", "copper", "fluorine", "gold", "helium", "hydrogen", "iodine", "iron",
           "krypton", "lead", "lithium", "magnesium", "mangenese", "mercury", "neon", "nickel",
           "nitrogen", "oxygen", "phosphorus", "platinum", "potassium", "radon", "selenium", "silicon", "silver",
           "sodium", "strontium", "sulfur", "tellurium", "tin", "titanium", "tungsten",
           "uranium", "vanadium", "xenon", "zinc", "zirconium")
)

ui <- fluidPage(
  title = "Element Test",
  br(),
  h3("Chemical Elements", style = "color: #3949AB"),
  br(),
  fluidRow(
    column(5, offset = 1, checkboxGroupInput("chk_options", "Test me on", choices = names(chem), selected = "symbol", inline = TRUE))
  ),
  fluidRow(
    column(5, offset = 1, uiOutput("ui_question")),
    column(5, uiOutput("ui_score"))
  )
  
)

server <- function(input, output, session) {

  last_num <- 0  
  question_count <- reactiveVal(0)
  score <- reactiveVal(0)
  question <- reactiveVal(NULL)
  answer <- reactiveVal(NULL)

  question_index <- reactive({
    question_count()
    num <- last_num
    while (num == last_num) {
      num <- sample(nrow(chem), size = 1)
    }
    last_num <- num
  })
  
  output$ui_question <- renderUI({
    if (length(input$chk_options) > 0) {
      question_type <- sample(input$chk_options, size = 1)
      answer_type <- names(chem)[!names(chem) == question_type]
      question(chem[[question_type]][question_index()])
      answer(chem[[answer_type]][question_index()])
      tagList(
        h3(paste(answer_type, "for:", question())),
        textInput("txt_question", label = NULL),
        actionButton("but_answer", "Submit")
      )
    }
  })
  
  observeEvent(input$but_answer, {
    if (input$txt_question == answer()) {
      score(score() + 1)
      showNotification(ui = "CORRECT!", type = "message")
    } else {
      showNotification(ui = paste0("WRONG.  Correct answer is ", answer()), type = "error")
    }
    question_count(question_count() + 1)
  })
  
  output$ui_score <- renderUI({
    h3(paste0("Score: ", score(), "/", question_count()), style = "color: #388E3C")
  })
}

app <- shinyApp(ui = ui, server = server)

```